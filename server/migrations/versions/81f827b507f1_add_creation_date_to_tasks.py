"""add_creation_date_to_tasks

Revision ID: 81f827b507f1
Revises: 133b8290ed97
Create Date: 2025-03-04 12:57:19.304125

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.exc import ProgrammingError

# revision identifiers, used by Alembic.
revision = '81f827b507f1'
down_revision = '133b8290ed97'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip creating the constraint as it already exists
    # with op.batch_alter_table('task_hierarchy', schema=None) as batch_op:
    #     batch_op.create_unique_constraint('uq_task_hierarchy', ['ancestor', 'descendant'])

    # Only add the creation_date column to the tasks table
    try:
        with op.batch_alter_table('tasks', schema=None) as batch_op:
            batch_op.add_column(sa.Column('creation_date', sa.DateTime(), nullable=False, server_default=sa.text('NOW()')))
    except ProgrammingError as e:
        if 'already exists' not in str(e):
            raise e

    # Skip other operations that might cause conflicts
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.alter_column('first_name',
    #            existing_type=sa.VARCHAR(length=50),
    #            type_=sa.String(length=40),
    #            existing_nullable=False)
    #     batch_op.alter_column('last_name',
    #            existing_type=sa.VARCHAR(length=50),
    #            type_=sa.String(length=40),
    #            existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Skip these operations in downgrade as well
    # with op.batch_alter_table('users', schema=None) as batch_op:
    #     batch_op.alter_column('last_name',
    #            existing_type=sa.String(length=40),
    #            type_=sa.VARCHAR(length=50),
    #            existing_nullable=False)
    #     batch_op.alter_column('first_name',
    #            existing_type=sa.String(length=40),
    #            type_=sa.VARCHAR(length=50),
    #            existing_nullable=False)

    try:
        with op.batch_alter_table('tasks', schema=None) as batch_op:
            batch_op.drop_column('creation_date')
    except ProgrammingError as e:
        if 'does not exist' not in str(e):
            raise e

    # Skip these operations in downgrade
    # with op.batch_alter_table('task_hierarchy', schema=None) as batch_op:
    #     batch_op.drop_constraint('uq_task_hierarchy', type_='unique')

    # ### end Alembic commands ###
